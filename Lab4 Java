import java.util.*;

public class Figure {
    public String name;
    static int number;
    public double square;
    public Figure(String Name)
    {
        name = Name;
        square=0;
    }
    public Figure()
    {}
    public void Display()
    {
        System.out.printf("Имя фигуры: %s ",name );
        System.out.printf("Площадь: %f \n", square);
    }
    public void NewName(String Name)
    {
        name = Name;
    }
    public void SquareCompare(double Square1, double Square2)
    {
        if (Square1 > Square2) System.out.printf("Площадь первой фигуры больше.");
        if (Square1 == Square2) System.out.printf("Площади фигур равны.");
        if (Square1 < Square2) System.out.printf("Площадь второй фигуры больше.");
    }

    public double GetSquare()
    {
        return(square);
    }
    public int GetNumber()
    {
        return(number);
    }
}


import java.util.*;
import Help4.Helper;

public class Circle extends Figure{
    private double rad;
    public Circle(String Name, double radius) {
        super(Name);
        if (radius < 0) this.rad = 0;
        else this.rad = radius;
        square = rad * rad * 3.14;
    }
    public Circle(String Name)
    {
        this(Name,0);
    }
    public Circle()
    {
       this("O",0);
    }
    public void Read()
    {
        String Name;
        double Radius;
        Scanner inp = new Scanner(System.in);
        Name = inp.nextLine();
        Radius = inp.nextDouble();
        if (Radius < 0) this.rad = 0;
        else this.rad = Radius;
        name = Name;
        rad = Radius;
        square = rad * rad * 3.14;
    }
    public void Display()
    {
        super.Display();
        System.out.printf("Радиус: %f\n",rad);
    }

    public double GetRadius()
    {
        return(rad);
    }

    public void NewRadius(double Radius)
    {
        rad = Radius;
        square = rad * rad * 3.14;
    }
};

import java.util.*;
import java.lang.Math.*;
import Help4.Helper;


public class Triangle extends Figure {
    private double firsteadge;
    private double secondeadge;
    private double threedeadge;


    public Triangle(String name, double FirstEadge, double SecondEadge, double ThreedEadge)
    {
        super(name);
        if (FirstEadge < 0) this.firsteadge = 0;
        else this.firsteadge = FirstEadge;
        if (SecondEadge < 0) this.secondeadge = 0;
        else this.secondeadge = SecondEadge;
        if (ThreedEadge < 0)this.threedeadge = 0;
        else this.threedeadge = ThreedEadge;
        double pp = Helper.Perimetr(firsteadge , secondeadge , threedeadge)/2;
        double x = pp * (pp - firsteadge) * (pp - secondeadge) * (pp - threedeadge);
        this.square = Math.sqrt(x);
    }
    public Triangle(String name)
    {
        this(name, 0, 0, 0);
    }
    public Triangle()
    {
        this("ABC",0,0,0);
    }
    public void Read()
    {
        String Name;
        double FirstEadge, SecondEadge, ThreedEadge;
        Scanner inp = new Scanner(System.in);
        Name = inp.nextLine();;
        FirstEadge = inp.nextDouble();
        SecondEadge = inp.nextDouble();
        ThreedEadge = inp.nextDouble();
        name= Name;
        if (FirstEadge < 0 || SecondEadge < 0 || ThreedEadge < 0)
        {
            this.firsteadge = 0;
            this.secondeadge = 0;
            this.threedeadge = 0;
        }
        else
        {
            this.firsteadge =FirstEadge;
            this.secondeadge = SecondEadge;
            this.threedeadge = ThreedEadge;
        }
        double pp = (firsteadge + secondeadge + threedeadge) * 0.5;
        double x =pp * (pp - firsteadge) * (pp - secondeadge) * (pp - threedeadge);
        this.square = Math.sqrt(x);
    }
    public void Display()
    {
        super.Display();
        System.out.printf("Длины сторон: %f %f %f \n",firsteadge,secondeadge,threedeadge);
    }

    public double GetFirstEage()
    {
        return(firsteadge);
    }
    public double GetSecondEadge()
    {
        return(secondeadge);
    }
    public double GetThreedEadge()
    {
        return(threedeadge);
    }
    public void NewEages(double FirstEadge, double SecondEadge, double ThreedEadge)
    {
        if( FirstEadge >0 && SecondEadge >0 && ThreedEadge>0)
        {firsteadge = FirstEadge;
            secondeadge = SecondEadge;
            threedeadge = ThreedEadge;
            double x;
            double pp = (firsteadge + secondeadge + threedeadge) * 0.5;
            x = pp * (pp - firsteadge) * (pp - secondeadge) * (pp - threedeadge);
            square = Math.sqrt(x);
        }
        else
            System.out.printf("Ошибка, таких сторон быть не может!\n ");
    }

}

import java.util.Scanner;

public class Orthogone extends Figure {
    private double lenght;
    private double width;
    public Orthogone(String Name, double Lenght, double Width) {
        super(Name);
        if (Lenght < 0) this.lenght = 0;
        else this.lenght = Lenght;
        if (Width < 0) this.width = 0;
        else this.width = Width;
        this.square = lenght * width;
    }
    public Orthogone(String name) {
        this(name, 0, 0);
    }
    public Orthogone() {
        this("ABCD", 0, 0);
    }
    public void Read()
    {
        String Name;
        double Lenght, Width;
        Scanner inp = new Scanner(System.in);
        Name = inp.nextLine();
        Lenght = inp.nextDouble();
        Width = inp.nextDouble();
        this.name=Name;
        if (Lenght < 0) this.lenght = 0;
        else this.lenght = Lenght;
        if (Width < 0) this.width = 0;
        else this.width = Width;
        this.square = lenght * width;
        square = lenght * width;
    }
    public void Display()
    {
        super.Display();
        System.out.printf("Длина: %f  Ширина: %f \n", lenght, width);
    }

    public double GetLenght()
    {
        return (lenght);
    }
    public double GetWidth()
    {
        return (width);
    }
    public void NewEadge(double lenght, double width)
    {
        lenght = lenght;
        width = width;
        square = lenght * width;
    }
};

import java.util.*;
import Help4.Helper;

public class Cylinder extends Circle {
    private double height;
    private double volume;
    private double squarebok;

    public Cylinder(String Name, double Radius, double Height)
    {
        super(Name,Radius);
        if(Height<0)height=0;
        else height = Height;
        volume = super.GetSquare() * height;
        squarebok = GetSquare() * 2 + GetRadius() * 2 * 3.14 * height;
    }
    public Cylinder(String Name)
    {
        this(Name,0,0);
    }
    public Cylinder()
    {
        this("O",0,0);
    }
    public void Read()
    {
        double Height;
        String Name;
        Scanner inp = new Scanner(System.in);
        super.Read();
        Height = inp.nextDouble();
        height = Height;
        volume = GetSquare() * height;
        squarebok = GetSquare() * 2 + Helper.CircleLenght(this.GetRadius()) * height;
    }
    public void Display()
    {
        System.out.printf("Основание: \n");
        super.Display();
        System.out.printf("Высота цилиндра: %f  Объем:  %f \n", height, volume );
    }

    public double GetSquarebok()
    {
        return(squarebok);
    }

    public double GetVolume()
    {
        return (volume);
    }

    public double GetHeight()
    {
        return (height);
    }
}

import java.util.*;


public class Prizm extends Triangle{
    private double height;
    private double volume;
    private double squarebok;
    public Prizm(String Name, double FirstEadge, double SecondEadge, double ThreedEadge, double Height)
    {
        super(Name,FirstEadge,SecondEadge,ThreedEadge);
        if (Height < 0) this.height = 0;
        else this.height = Height;
        this.volume = GetSquare() * height;
        this.squarebok = GetSquare() * 2 + height * GetFirstEage() + height * GetSecondEadge() + height * GetThreedEadge();
    }
    public Prizm(String name)
    {
        this(name,0,0,0,0);
    }
    public Prizm()
    {
        this("ABC",0,0,0,0);
    }
    public void Read()
    {
        Scanner inp = new Scanner(System.in);
        super.Read();
        double Height;
        Height=inp.nextDouble();
        if (Height < 0)height = 0;
        else height = Height;
        volume = GetSquare() * height;
        squarebok =GetSquare() * 2 + height * GetFirstEage() + height * GetSecondEadge() + height * GetThreedEadge();
    }
    public void Display()
    {
        System.out.println("Основание призмы: ");
        super.Display();
        System.out.printf("Высота призмы: %f  Объем:  %f \n",height, volume);
    }
    public double GetSquareBok()
    {
        return(squarebok);
    }
    public double GetVolume()
    {
        return(volume);
    }
    public double GetHeight()
    {
        return(height);
    }
}

import java.util.Scanner;

public class Parall extends Orthogone
{
    private double height;
    private double volume;
    private double squarebok;
    public Parall(String Name, double Lenght, double Width, double Height)
    {
        super(Name,Lenght,Width);
        if (Height < 0) this.height = 0;
        else  this.height = Height;
        this.volume = height * GetSquare();
        this.squarebok = (height * GetLenght() * 2) + (height * GetWidth() * 2) + (GetSquare() * 2);
    }
    public Parall(String name)
    {
        this(name,0,0,0);
    }
    public Parall()
    {
        this("ABCD",0,0,0);
    }
    public void Read()
    {
        Scanner inp = new Scanner(System.in);
        super.Read();
        double Height;
        Height = inp.nextDouble();
        if (Height<0) height = 0;
        else height = Height;
        volume = height * GetSquare();
        squarebok = (height * GetLenght() * 2) + (height * GetWidth() * 2) + (GetSquare() * 2);
    }
    public void Display()
    {
        System.out.println("Основание параллелепипеда: \n");
        super.Display();
        System.out.printf("Высота параллелепипеда: %f  Объем:  %f \n",height, volume);
    }
    public double GetSquarebok()
    {
        return(squarebok);
    }
    public double GetVolume()
    {
        return(volume);
    }
    public double GetHeight()
    {
        return(height);
    }
}

package Help4;

public class Helper
{
    public static double Perimetr(double FirstEadge, double SecondEadge, double ThreedEadge)
    {
        double P = (FirstEadge + SecondEadge + ThreedEadge);
        return P;
    };
    public static double CircleLenght(double Radius)
    {
        double L = 2*3.14*Radius;
        return L;
    }
}

import java.io.*;
import java.util.Scanner;


public class Main{
    public static void main(String args[]) throws UnsupportedEncodingException {
        OutputStreamWriter os = new OutputStreamWriter(System.out,"Cp866");
        PrintWriter Pr = new PrintWriter(os,true);
        int i;
        int n;
        Circle c1 = new Circle("O",2);
        c1.Display();
        System.out.printf("Введите количество кругов: ");
        Scanner inp = new Scanner(System.in);
        n = inp.nextInt();
        Circle c[] = new Circle[n];
        for (i = 0; i < n; i++)
        {
            c[i]= new Circle("O1",i+1);
            c[i].Read();
        }
        for (i = 0; i < n; i++)
        {
            c[i].Display();
        }
        Orthogone OPRS = new Orthogone("OPRS", 5, 6);
        OPRS.SquareCompare(OPRS.GetSquare(), c[0].GetSquare());
    }
}
